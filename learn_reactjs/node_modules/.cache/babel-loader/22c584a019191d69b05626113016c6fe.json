{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-end\\\\reactJS\\\\learn_reactjs\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"abs\",\n        name: \"Max\",\n        age: 28\n      }, {\n        id: \"bf\",\n        name: \"Manu\",\n        age: 28\n      }, {\n        id: \"dsa\",\n        name: \"Sophie\",\n        age: 23\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const person = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      }; // const person = Object.assign({}, this.state.person[personIndex])\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"This is really working!\"), React.createElement(\"button\", {\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Switch Name\"), persons);\n  } // return React.createElement('div', {className: 'App'}, React.createElement('p', null, 'This is really working!'))\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Front-end/reactJS/learn_reactjs/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","deletePersonHandler","personIndex","splice","setState","nameChangedHandler","event","findIndex","p","person","target","value","togglePersonsHandler","doesShow","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n\n  state = {\n    persons: [\n      { id:\"abs\", name: \"Max\", age: 28 },\n      { id: \"bf\", name: \"Manu\", age: 28 },\n      { id: \"dsa\", name: \"Sophie\", age: 23 }\n    ],\n    otherState: 'some other value',\n    showPersons: false\n  }\n\n  // const [otherState, setOtherState] = useState('some other state');\n\n  // console.log(personsState, otherState)\n  // switchNameHandler = (newName) => {\n  //   // console.log('Was clicked!')\n  //   // DON'T DO THIS: this.state.persons[0].name=\"Maximilian\"; // warning\n  //   this.setState({\n  //     persons: [\n  //       { name: newName, age: 28 },\n  //       { name: \"Manu\", age: 28 },\n  //       { name: \"Sophie\", age: 25 }\n  //     ]\n  //   })\n  // }\n\n  deletePersonHandler = (personIndex) => {\n    // const person = this.state.persons.slice();\n    const persons = [...this.state.persons]\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons});\n  }\n\n  nameChangedHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    })\n\n    const person = {\n      ...this.state.persons[personIndex]\n    }\n\n    // const person = Object.assign({}, this.state.person[personIndex])\n    person.name = event.target.value;\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({\n      persons: persons\n    })\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  render() {\n    let persons = null; \n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return <Person \n            click={() => this.deletePersonHandler(index)}\n            name={person.name} \n            age={person.age}\n            key={person.id} \n            changed={(event) => this.nameChangedHandler(event, person.id)}/>\n          })}\n        {/* <Person\n          name={this.state.persons[0].name}\n          age={this.state.persons[0].age} />\n        <Person\n          name={this.state.persons[1].name}\n          age={this.state.persons[1].age}\n          click={this.switchNameHandler.bind(this, \"Max!\")}\n          changed={this.nameChangedHandler}>\n          My Hobbies: Running\n        </Person>\n        <Person\n          name={this.state.persons[2].name}\n          age={this.state.persons[2].age} /> */}\n      </div>\n      )\n    }\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p>This is really working!</p>\n        <button onClick={this.togglePersonsHandler}>Switch Name</button>\n        {persons}\n      </div>\n    );\n  }\n  // return React.createElement('div', {className: 'App'}, React.createElement('p', null, 'This is really working!'))\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}